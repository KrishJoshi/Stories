{"version":3,"sources":["header/index.jsx","story/index.jsx","config/firebase.js","form/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","Component","Story","_this$props","this","props","title","subtitle","heading","story","src","alt","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Form","formik_esm","initialValues","name","validate","values","errors","onSubmit","_ref","setSubmitting","toSave","Object","objectSpread","created","Date","toISOString","published","database","ref","child","push","then","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitCount","type","onChange","onBlur","value","placeholder","rows","disabled","App","state","stories","storiesRef","self","on","snapshot","snapVal","val","keys","map","key","console","log","setState","header","src_story","src_form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52257337.chunk.js","sourcesContent":["import React, {Component} from 'react';\nclass Header extends Component {\n  render() {\n    return (\n      <section id=\"banner\">\n        <div className=\"bg-color\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"inner text-center\">\n                <h1 className=\"logo-name\">Stories</h1>\n                <h2>Share your life</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\r\n\r\nclass Story extends Component {\r\n  render() {\r\n    const {title, subtitle, heading, story} = this.props;\r\n    return (\r\n      <section id=\"about\" className=\"section-padding\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center marb-35\">\r\n              <h1 className=\"header-h\">{title}</h1>\r\n              <p className=\"header-p\">{subtitle}</p>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"col-md-8 col-sm-8\">\r\n                <div className=\"about-info\">\r\n                  <h2 className=\"heading\">{heading}</h2>\r\n                  <p>\r\n                    {story}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 col-sm-4\">\r\n                <img src=\"https://source.unsplash.com/weekly?water\" alt=\"\" className=\"img-responsive\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Story;\r\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyAFQymNtUwRoW0JFCDTa2eDisIRtLcQPtE\",\n  authDomain: \"stories-afd26.firebaseapp.com\",\n  databaseURL: \"https://stories-afd26.firebaseio.com\",\n  projectId: \"stories-afd26\",\n  storageBucket: \"stories-afd26.appspot.com\",\n  messagingSenderId: \"946552593044\"\n};\n\nconst firebaseConf = firebase.initializeApp(config);\n\nexport default firebaseConf;\n","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport firebaseConf from '../config/firebase';\nclass Form extends Component {\n  render() {\n    return (\n      <div>\n        <section id=\"contact\" className=\"section-padding\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"header-h\">Share your story</h1>\n                <p className=\"header-p\">We would like to know how you feel</p>\n              </div>\n            </div>\n            <div className=\"row msg-row\">\n              <div className=\"msg-row-form\">\n                <Formik\n                  initialValues={{ heading: '', name: '', story: '', title: '', subtitle: '' }}\n                  validate={values => {\n                    let errors = {};\n                    if (!values.name) {\n                      errors.name = 'Required';\n                    } else if(!values.heading){\n                      errors.heading = 'Required';\n                    }else if(!values.title){\n                      errors.title = 'Required';\n                    }else if(!values.subtitle){\n                      errors.subtitle = 'Required';\n                    } else if(!values.story){\n                      errors.story = 'Required';\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    const toSave = {...values, created: new Date().toISOString(), published: false};\n                    firebaseConf.database().ref().child('stories').push(toSave).then(()=> setSubmitting(false));\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    submitCount,\n                  }) => (<div>\n                      {!!submitCount &&  <div id=\"sendmessage\">Your booking request has been sent. Thank you!</div>}\n                      {!submitCount && <form onSubmit={handleSubmit}>\n                        <div className=\"col-md-12 col-sm-12 contact-form pad-form\">\n                          <div className=\"form-group label-floating is-empty\">\n                            <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\"\n                                   onChange={handleChange} onBlur={handleBlur}\n                                   value={values.name} placeholder=\"Your Name\" />\n                            {errors.name && touched.name &&\n                            <div className=\"validation\">{errors.name}</div>}\n                          </div>\n  \n                          <div className=\"form-group label-floating is-empty\">\n                            <input type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"\n                                   onChange={handleChange} onBlur={handleBlur}\n                                   value={values.title} placeholder=\"Story's Title\" />\n                            {errors.title && touched.title &&\n                            <div className=\"validation\">{errors.title}</div>}\n                          </div>\n  \n                          <div className=\"form-group label-floating is-empty\">\n                            <input type=\"text\" name=\"subtitle\" className=\"form-control\" id=\"subtitle\"\n                                   onChange={handleChange} onBlur={handleBlur}\n                                   value={values.subtitle} placeholder=\"Story's Subtitle\" />\n                            {errors.subtitle && touched.subtitle &&\n                            <div className=\"validation\">{errors.subtitle}</div>}\n                          </div>\n                          \n                          <div className=\"form-group label-floating is-empty\">\n                            <input type=\"text\" name=\"heading\" className=\"form-control\" id=\"heading\"\n                                   onChange={handleChange} onBlur={handleBlur}\n                                   value={values.heading} placeholder=\"Story's Heading\" />\n                            {errors.heading && touched.heading &&\n                            <div className=\"validation\">{errors.heading}</div>}\n                          </div>\n                        </div>\n                        <div className=\"col-md-12 contact-form\">\n                          <div className=\"form-group label-floating is-empty\">\n                            <textarea className=\"form-control\" name=\"story\" rows=\"20\"\n                                      onChange={handleChange} onBlur={handleBlur}\n                                      value={values.story} placeholder=\"Story\"/>\n                            {errors.story && touched.story &&\n                            <div className=\"validation\">{errors.story}</div>}\n                          </div>\n                        </div>\n                        <div className=\"col-md-12 btnpad\">\n                          <div className=\"contacts-btn-pad\">\n                            <button type=\"submit\" className=\"contacts-btn\" disabled={isSubmitting}>Share Story</button>\n                          </div>\n                        </div>\n                      </form>}\n                    </div>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './header';\nimport Story from './story';\nimport Form from './form';\nimport firebaseConf from './config/firebase';\n\nclass App extends Component {\n  state = {\n    stories: []\n  };\n  componentDidMount() {\n    var storiesRef = firebaseConf.database().ref('stories/');\n    const self = this;\n    storiesRef.on('value', function(snapshot) {\n      const snapVal = snapshot.val();\n      const stories = Object.keys(snapVal).map((key) => {\n        return snapVal[key];\n      });\n      console.log(stories);\n      self.setState({stories})\n    });\n  }\n  render() {\n    const {stories} = this.state;\n    return (\n      <div>\n        <Header/>\n        {stories.map((story) => <Story {...story}/>)}\n        <Form/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}